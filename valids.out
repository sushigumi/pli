Running valid test
Testing completeTest.gt
proc q (val float x, ref int k)
    int n;
    float y;
    bool a[IntConst 8];
begin
    a[IntConst 7] := true;
    k := 42;
end

proc main ()
    int m;
    int n;
begin
    read n;
    while n > 1 do
        m := n;
        while m > 0 do
            if m > 0 then
                n := n - 1;
                m := m - 1;
                if m = 0 then
                    call p(n);
                fi
            else
                m := n - m;
                m := m - 1;
            fi
        od
    od
end

Testing if.gt
proc main ()
    int m;
    int n;
begin
    if m > 0 then
        m := n;
        if m > 1 then
            m := n + n;
        fi
    fi
end

Testing io.gt
proc main ()
    int x;
    int A_38;
    bool mood;
begin
    write "Give us a number, please: ";
    read x;
    write "And another: ";
    read A_38;
    write "Happy and you know it (true/false): ";
    read mood;
    write mood;
    write "\nYour first number was ";
    write x;
    write "/n";
end

Testing nonAssociative.gt
proc q (val float x, ref int k)
    int np;
    float y;
    bool a[IntConst 8];
begin
    a[IntConst 7] := false;
    k := 42;
end

proc main ()
    int m;
    int n;
begin
    read n;
    n := 8 + 2;
    m := 8 + (10 * 2);
    n := (8 + 10) - 2;
    m := 9 + (10 / 2);
    m := -n;
end

Testing test.gt
proc q (val float x, ref int k)
    int n;
    float y[IntConst 9];
begin
    a := true;
    k := 43;
end

proc main ()
    int m;
    float x[IntConst 8, IntConst 9];
begin
    a := 43.123;
end

